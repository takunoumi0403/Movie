/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2019-07-29 02:38:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class u18_005fmovieReservation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");

	//座席の最大値を受け取る
	int maxSeatSpace = (int)request.getAttribute("maxSeatSpace");

	//全て空席状態の配列を作る
	int seat[] = new int[maxSeatSpace];
	for(int i = 0; i < seat.length; i++){
		seat[i] = 0;
	}

	//埋まっている座席を取得して、seat[]に反映する
	List<Integer> reservedSeatList = (List<Integer>)request.getAttribute("reservedSeatList");
	for(int reservedSeatNum : reservedSeatList){
		//空席を予約席に変更する。
		seat[reservedSeatNum] = 1;
	}

	String showCode = (String)request.getAttribute("showCode");


      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./header/userHeader.jsp", out, false);
      out.write("\n");
      out.write("\t<div class=\"w-75 mx-auto\">\n");
      out.write("\t<h1>座席表</h1>\n");
      out.write("\t<form action=\"movieReservationCheck?showCode=");
      out.print(showCode );
      out.write("\" method=\"post\">\n");
      out.write("\t\t<table class=\"table text-center table-bordered\">\n");
      out.write("\t\t\t<tr><td height=\"100px\" colspan=\"20\"><h1>SCREEN</h1></td></tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t\t");
try{ 
      out.write("\n");
      out.write("\t\t\t");
 for(int i =0; i < (maxSeatSpace/20)+1; i++){ 
      out.write("\n");
      out.write("\t\t\t<table class=\"table-bordered mx-auto text-center\">\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t");
for(int j = 0; j < 20; j++){ 
      out.write("\n");
      out.write("\t\t\t\t\t\t");
 if(seat[(i*20)+j] != 1){ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<td width=\"50px\" height=\"100\" style=\"background-color:skyblue;\">\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"vacantSeat\" value=\"");
      out.print((i*20)+j+1);
      out.write("\" id=\"seat\">");
      out.print((i*20)+j+1 );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t");
 }else{ 
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<td width=\"50px\" height=\"100\" class=\"bg-light\">\n");
      out.write("\t\t\t\t\t\t\t\t<h6>予約済</h6>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t\t");
 } 
      out.write('\n');
      out.write('	');
      out.write('	');
}catch(Exception e){ } 
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t<table>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<a href=\"movieList\"><button type=\"button\" class=\"mb-5 mt-3 btn float-left btn-secondary btn-lg\">戻る</button></a>\n");
      out.write("\t\t\t<button type=\"submit\" class=\"mb-5 mt-3 btn float-right btn-primary btn-lg\">決定</button>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\t</form>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
